imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru
    languages:
       en: English
       ru: Русский

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    templating:
        engines: ['twig']
        form:
            resources:
                - 'AppBundle:Form:icon.html.twig'
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: ~
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    date:
        format: d.m.Y, H:i:s
        interval_format: '%%d days'
    globals:
        templates:
            - document.html.twig
            - documents_listing.html.twig
            - text.html.twig
            - on_off.html.twig
            - date.html.twig
            - image.html.twig
            - video.html.twig
            - file.html.twig
            - long_text.html.twig
            - gallery.html.twig
            - url.html.twig
        units:
            - Час
            - Полсмены
            - Смена
            - Неделя
#        api_states: {exmo: 0, best_change: 1}
#        position: {up: 1, up_first: 2, down: 0, down_second: -1}
    form_themes:
#        resources:
            - bootstrap_3_layout.html.twig
            - SonataCoreBundle:Form:datepicker.html.twig
            - AppBundle:Form:app_bundle_settings.html.twig
            - AppBundle:Form:app_bundle_parameters.html.twig
            - AppBundle:Form:app_bundle_document.htm.twig
            - AppBundle:Form:app_bundle_documents_list.htm.twig
            - AppBundle:Form:app_bundle_text.html.twig
            - AppBundle:Form:app_bundle_file.html.twig
            - AppBundle:Form:icon.html.twig
            - AppBundle:Form:file_form_type.html.twig
            - AppBundle:Form:app_bundle_contact.html.twig

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
# stfo doctrine extensions
stof_doctrine_extensions:
    default_locale: en
    translation_fallback: true
    orm:
        default:
            timestampable: true
            sluggable: true
            translatable: true
            loggable: true


# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'
    encryption: ssl
    auth_mode:  login
#    logging:  "%kernel.debug%"
    spool: { type: memory }

#jms_i18n_routing:
#    default_locale: ru
#    locales: [en, ru]
#    strategy: prefix_except_default

fos_user:
       db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
       firewall_name: main
       use_listener: false
       user_class: AppBundle\Entity\User
       from_email:
           address: paremuzian@usavin.com
           sender_name: Tig


fos_rest:
    param_fetcher_listener: true
    body_listener: false
    body_converter:
                enabled: true
    format_listener: false
    view:
        view_response_listener: true
    routing_loader:
        default_format: json
        include_format: false

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin.block.search_result:
            contexts: [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:
        sonata.admin.block.project.list:

sonata_admin:
    title:      Asphalt Moscow
    title_logo: /bundles/app/img/asphalt_moscow.png
    security:
        handler: sonata.admin.security.handler.role
    templates:
        # default global templates

        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig
        knp_menu_template: AppBundle:AdminMenu:custom_knp_menu.html.twig
        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig
        search:  SonataAdminBundle:Core:search.html.twig
        search_result_block: SonataAdminBundle:Block:block_search_result.html.twig
#        list_mosaic_custom: list_outer_rows_mosaic_custom.html.twig
    dashboard:
        blocks:
            # display a dashboard block
            -
              position: bottom
              type: sonata.admin.block.admin_list
              settings:
                  groups: [Menu]
            -
              position: left
              type: sonata.admin.block.admin_list
              settings:
                  groups: [Asphaltings]
            -
              position: right
              type: sonata.admin.block.admin_list
              settings:
                  groups: [Equipments]
        groups:
            Menu:
                label: ~
                label_catalogue: ~
                icon: '<i class="fa fa-list-alt"></i>'
                items:
                    - app.admin.page
                    - app.admin.documents.list
                    - app.admin.document
                roles: [ ROLE_MODERATOR, ROLE_SUPER_ADMIN ]
            Asphaltings:
                label: ~
                label_catalogue: ~
                icon: '<i class="fa fa-list-alt"></i>'
                items:
                    - app.admin.asphaltings
                    - app.admin.asphalting.types
                roles: [ ROLE_MODERATOR, ROLE_SUPER_ADMIN ]
            Equipments:
                label: ~
                label_catalogue: ~
                icon: '<i class="fa fa-list-alt"></i>'
                items:
                    - app.admin.equipments
                    - app.admin.equipment.types
                roles: [ ROLE_MODERATOR, ROLE_SUPER_ADMIN ]

liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:

#        cache: ~
        banner_lg:
            quality: 100
            filters:
                thumbnail: { size: [1920, 890], mode: outbound }
        list_icon:
            quality: 100
            filters:
                thumbnail: { size: [100, 100], mode: outbound }
        list_gallery:
            quality: 100
            filters:
                thumbnail: { size: [800, 533], mode: outbound }
        grid_list:
            quality: 100
            filters:
                thumbnail: { size: [400, 300], mode: outbound }

        grid_asphalt_list:
            quality: 100
            filters:
                thumbnail: { size: [500, 300], mode: outbound }

        gallery_list:
            quality: 100
            filters:
                thumbnail: { size: [600, 400], mode: outbound }

        gallery_single:
            quality: 100
            filters:
                thumbnail: { size: [1200, 900], mode: outbound }

#gos_web_socket:
#    server:
#        port: 1234        #The port the socket server will listen on
#        host: unicash.loc   #The host ip to bind to
#        router:
#          resources:
#              - '@AppBundle/Resources/config/pubsub/routing.yml'
#    topics:
#        - '@acme_hello.topic_sample_service'
#    rpc:
#        - '@app_chat.rpc_sample_service'
#    client:
#        firewall: main #can be an array of firewalls
#        session_handler: '@session.handler.pdo'


#user_notification:
#    channel: chat/user/{room}
#    handler:
#        callback: ['AppBundle\Topic\AppChat', 'addPushers']
#        args: [ 'websocket' ]
#    requirements:
#        room:
#            pattern: "[a-z]+"

monolog:
    channels: ["urldataok", "urldataerror"]
    handlers:
        urldataok:
            type:  stream
            path:  "%kernel.logs_dir%/urldataok.log"
            channels: [urldataok]
        urldataerror:
            type:  stream
            path:  "%kernel.logs_dir%/urldataerror.log"
            channels: [urldataerror]

#gos_web_socket:
#    server:
#        port: '%websocket_port%'        #The port the socket server will listen on
#        host: '%server_name%'   #The host ip to bind to
#        router:
#          resources:
#              - '@AppBundle/Resources/config/pubsub/routing.yml'
#    topics:
#        - '@acme_hello.topic_sample_service'
#        - '@app_chat.service'
#    rpc:
#        - '@app_chat.rpc_sample_service'
#    client:
#        firewall: main #can be an array of firewalls
#        session_handler: '@session.handler.pdo'

