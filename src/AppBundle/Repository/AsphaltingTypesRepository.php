<?php

namespace AppBundle\Repository;

/**
 * AsphaltingTypesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AsphaltingTypesRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * names and slugs
     */
    public function findAllForParent(){

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('at.slug, at.name')
            ->from('AppBundle:AsphaltingTypes', 'at')
            ->getQuery()->getResult()
            ;
    }

    /**
     * names and slugs
     */
    public function findAllForSitemap(){

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('at')
            ->from('AppBundle:AsphaltingTypes', 'at')
            ->leftJoin('at.asphalting', 'a')->addSelect('a')
            ->getQuery()->getResult()
            ;
    }

    /**
     * @return array
     * This function used to get data for list
     */
    public function findForList() {

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('at')
            ->from('AppBundle:AsphaltingTypes', 'at')
            ->leftJoin('at.asphalting', 'a')->addSelect('a')
            ->getQuery()->getResult()

            ;
    }


    /**
     * @return array
     * This function used to get data for list
     */
    public function findSingleType($slug) {

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('at')
            ->from('AppBundle:AsphaltingTypes', 'at')
            ->leftJoin('at.asphalting', 'a')->addSelect('a')
            ->where('at.slug = :sl')
            ->setParameter('sl', $slug)
            ->getQuery()->getResult()

            ;
    }


    /**
     * @return array
     * This function used to get data for list
     */
    public function findSugested($slug, $current) {

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('at')
            ->from('AppBundle:AsphaltingTypes', 'at')
            ->leftJoin('at.asphalting', 'a', 'WITH', 'a.slug != :cr')->addSelect('a')
            ->where('at.slug = :sl')
            ->setParameter('sl', $slug)
            ->setParameter('cr', $current)
            ->getQuery()->getResult()

            ;
    }

    /**
     * @return array
     * This function used to get all without current
     */
    public function findOther($slug) {

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('at')
            ->from('AppBundle:AsphaltingTypes', 'at')
            ->leftJoin('at.asphalting', 'a')->addSelect('a')
            ->where('at.slug != :sl')
            ->setParameter('sl', $slug)
            ->getQuery()->getResult()

            ;
    }

    /**
     * @return array
     * find pricing by types
     */
    public function findPricing() {

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('t, a, p')
            ->from('AppBundle:AsphaltingTypes', 't')
            ->leftJoin('t.price', 'tp')
            ->leftJoin('t.asphalting', 'a')
            ->leftJoin('a.price', 'p')
            ->getQuery()->getResult()
            ;
    }
}
